---
const currentYear = new Date().getFullYear();
const years = Array.from({ length: 20 }, (_, i) => currentYear + i);
---

<label>
  <p class="mb-1">Year</p>
  <div class="relative w-24">
    <input
      type="text"
      data-year-input
      class="z-10 w-full p-1 pl-2 text-lg text-slate-900"
      value={currentYear}
    />
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      stroke-width="1.5"
      stroke="currentColor"
      class="absolute right-0 top-0 size-6 h-full align-middle text-slate-900"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        d="M8.25 15 12 18.75 15.75 15m-7.5-6L12 5.25 15.75 9"></path>
    </svg>
    <div
      data-year-dropdown
      class="absolute z-20 flex hidden max-h-56 w-full flex-col overflow-scroll bg-slate-50"
    >
      {
        years.map((year) => (
          <button
            type="button"
            class="p-1 pl-2 text-left text-lg text-slate-900 hover:bg-slate-200"
          >
            {year}
          </button>
        ))
      }
    </div>
  </div>
</label>
<script>
  const input = document.querySelector('[data-year-input]') as HTMLInputElement;
  const dropdown = document.querySelector('[data-year-dropdown]')!;
  const dropdownButtons = dropdown.querySelectorAll('button');

  const MAX_YEAR = 4000;
  const SUGGESTED_YEARS = dropdownButtons.length;

  dropdownButtons.forEach((button) => {
    button.addEventListener('click', () => {
      input.value = button.innerText;
    });
  });

  input.addEventListener('input', () => {
    updateDropdown();
  });

  input.addEventListener('focus', () => {
    updateDropdown();
    dropdown.classList.remove('hidden');
  });

  window.addEventListener('click', (event) => {
    if (event.target !== input) {
      dropdown.classList.add('hidden');
    }
  });

  function updateDropdown() {
    const year = Number(input.value);

    if (isNaN(year)) return;

    const suggestedYear = suggestYear(year);
    dropdownButtons.forEach((button, index) => {
      button.innerText = String(suggestedYear + index + 1);
    });
  }

  function suggestYear(year: number) {
    if (year > MAX_YEAR - SUGGESTED_YEARS) {
      return MAX_YEAR - SUGGESTED_YEARS;
    }

    year = Math.max(year, 1);

    const firstDigit = Number(String(year)[0]);
    const minYear = [1, 2].includes(firstDigit) ? 1000 : 100;

    while (year < minYear) {
      year *= 10;
    }

    return year;
  }
</script>
